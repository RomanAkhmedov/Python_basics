# Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
# При вызове функции должен создаваться объект-генератор. Функция должна вызываться следующим образом:
# for el in fact(n). Функция отвечает за получение факториала числа, а в цикле необходимо выводить только первые
# n чисел, начиная с 1! и до n!.
# Подсказка: факториал числа n — произведение чисел от 1 до n. Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.


def fact(n):
    """
    Функция возвращает объект-генератор, являющийся факториалом передаваемого целочисленного параметра
    (либо одного из целочисленных параметров, предшествующих передаваемому параметру)
    """
    try:
        if n % 1 != 0:
            raise TypeError
        base = 1
        for i in range(1, n + 1):
            base *= i
            yield base
    except TypeError as error:
        print(f'Ошибка {error}: передаваемое в параметр число должно быть целочисленным (типа integer)')


for idx, el in enumerate(fact(10), 1):
    print(f'{idx}-й -> {el}')
